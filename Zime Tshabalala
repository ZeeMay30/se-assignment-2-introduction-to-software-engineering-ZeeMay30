Software Engineering is a branch of computer science that deals with the design, development, testing, and maintenance of software application. Software Engineering applies scientific and mathematical principles to the design, analysis and implementation of software systems. Whereas traditional programming mainly focuses with writing codes to solve specific problems. SDLC (Software Development Life Cycle) has various phases namely planning, design, coding, testing, deployment and maintainance.
SDLC has 6 phases : 1 Requirements - This where the gathering of information happens, what will you require, the cost etc the needs of the end-user. 2 Design - This phase is a very important stage because this is where creation of high level and detailed designs of software architecture and user interface. 3 Implementation - This phase is initiated after the system has been tested and has been accepted by the user. Writing codes and building the software according to the design specification. 4 Testing - Conducting many tests to ensure the software meets the quality standards and functionality. 5 Deployment - This is a phase where you release the software to the users or customers. 6 Maintainance - Providing on going support, updates and enhancemengt to the software after deployment. Agile vs Waterfall models - Agile is open to adaptation, encourages collaborations, and responds to change. It is more for long projects. Waterfall is for short projects and has a sequential approach, flowing downwards.
Agile model - is an iterative approach to delivering a project, focuses on continuous releases and has customer feedback. Waterfall model - has a clear sequence and is used for short projects.
Requirement Engineering is the process of defining, documenting, and mainly maintaining requirements in the engineering design process. t involves stages such as requirement elicitation, analysis, specification, validation, and management, ensuring that the software meets the needs and expectations of its stakeholders and is critical for delivering a successful and functional product. This process is important in the software development lifecycle because it helps to clearly define the scope, set clear objectives, and reduce the risk of project failure by identifying and addressing. There are 10 engineering principles.
Modularity in software design aims to improve software development by breaking down complex problems into more manageable sub-problems. By breaking down a large software system into smaller modules, developers can focus on writing codes that are easier to understand, test and maintain. Software testing is the process of checking the quality, performance, functionally of software products before launching.
There are different level of software: Unit Testing - this is the type of testing where indivual components of a software are tested. Integration Testing - is a form of software testing in which multiple parts of a software system are tested as a group. System Testing - is defined as testing of a complete and fully integrated software product. This testing falls in black-box testing wherein knowledge of inner design of the code is not pre-requisite and is done by the testing team. Acceptance Testing is the last level of software testing that is carried out before the product goes live. Testing is crucial in software engineering because it helps with reducing project risk, providing confidence in software quality, meeting complaince needs, ensuring satisfied users, enabling continuous improvement and reducing overall costs.
Version Control Systems are software tools that help software teams manage changes to source code over time. Version control system help software teams to work faster and smarter. One popular version control systems is called Git. Git is a distributed VCS. Features in VCS include being reliable, having multiple files, being able to revert (store old versions, in whole or in part)
The role in software project management is a professional responsibility for planning, organizing, and executing projects in different sectors. The project management possess the expertise to oversee projects, allocate resources, manage risks, and communicate effectively with stakeholders.
Software maintenance is an important part of the software life cycle that involves modifying and updating software after it has been deployed. The goal of maintenance is to correct faults. Improve performance or other attributes, and adapt the software to a changing environment throughout it's lifetime. Ethical consideration in software engineering is about creating software that respects user privacy, promotes fairness, and benefits society as a whole. Ethics in software engineering is about making decisions that respect user privacy, promotes fairness, and benefit society.
These are some of ethical consideration in software engineering, privacy, accuracy, property, accessibility, and effects on quality of life. These are all the features that need to be considered in developing and delivering computer software systems. 
